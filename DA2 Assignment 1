---
title: "DA2 Assignment 1"
author: "Hsu"
date: "2022-11-26"
output:
    pdf_document:
        latex_engine: xelatex
---

# Load library 
```{r, echo=F}
library(tidyverse)
library(arm)
library(lmtest)
library(estimatr)
library(sandwich)
library(segmented)
library(stargazer)
library(cowplot)
library(huxtable)
library(modelsummary)
library(kableExtra)
```

# Load data
```{r, }
df <- read.csv('https://osf.io/download/4ay9x/')

head(df)
```


# Select observations
```{r}
df <- df %>% filter(uhours>=20 & earnwke>0 & age>=24 & age<=64)
```

# Create variables
```{r}
df <- df %>% mutate(female = ifelse(sex == 2, 1, 0),
                    gender = factor(female,
                                    level = c(1, 0),
                                    labels = c('female', 'male')),
                    hourly_earning = earnwke/uhours,
                    ln_hourly_earning = log(hourly_earning))
```


# *Tasks 1 - Show the unconditional gender gap*
# By descriptive data table
```{r}
P95 <- function(x){quantile(x,0.95,na.rm=T)}
P05 <- function(x){quantile(x,0.05,na.rm=T)}
Range <- function(x) {max(x) - min(x)}

datasummary( hourly_earning * (Heading('gender') * gender) ~
               N + Mean + SD + P05 + Median + P95,
             data=df, title = 'Descriptive statistics', output = 'markdown')

```

# By regression
## (on binary variable that is one if the individual is female and zero if male)
```{r}
reg_unconditional <- lm_robust(hourly_earning ~ female, data = df, se_type = "HC1")

summary(reg_unconditional)

msummary(list(reg_unconditional),
         fmt="%.4f",
         gof_omit = 'DF|Deviance|Log.Lik.|F|R2 Adj.|AIC|BIC',
         stars=c('*' = .05, '**' = .01)
         ) %>% kable_classic(full_width = F, position = "center" , font_size = 9)
```



# *Task 2 - Show how the gender gap varies with the level of education* 
# Consider several options to model the relationship
## Focus on **Business and Financial Operations Occupations**
```{r}
df_edu <- df %>% filter( occ2012 >= 500 & occ2012 <= 950)
```


## create variable on level of education
```{r}
df_edu <- df_edu %>% mutate(education = ifelse(grade92 <= 38, 1,
                                                   ifelse(grade92 == 39, 2,
                                                     ifelse(grade92 == 40, 3,
                      ifelse(grade92 == 41 | grade92 == 42, 4,
                        ifelse(grade92 == 43, 5, 
                          ifelse(grade92 == 44, 6,
                            ifelse(grade92 == 45, 7, 8))))))))
```


## Regression
```{r}
reg_fe <- lm_robust(ln_hourly_earning ~ female, data = df_edu, se_type = "HC1")
reg_fe_edu <- lm_robust(ln_hourly_earning ~ female + education, data = df_edu, se_type = "HC1")
reg_fe_edu_age <- lm_robust(ln_hourly_earning ~ female + education + age, data = df_edu, se_type = "HC1")

summary(reg_fe)
summary(reg_fe_edu)
summary(reg_fe_edu_age)


reg_f1 <- lm_robust(ln_hourly_earning ~ education, 
                    data= df_edu[df_edu$female==1, ])
reg_m1 <- lm_robust(ln_hourly_earning ~ education, 
                    data= df_edu[df_edu$female==0, ])


msummary(list(reg_fe, reg_fe_edu, reg_fe_edu_age, reg_f1, reg_m1),
         fmt="%.4f",
         gof_omit = 'DF|Deviance|Log.Lik.|F|R2 Adj.|AIC|BIC',
         stars=c('*' = .05, '**' = .01)
         ) %>% kable_classic(full_width = F, position = "center" , font_size = 9)
```

## Graph
```{r}
predict(reg_f1, df_edu, se.fit=T)
as_tibble(predict(reg_f1, df_edu, interval="confidence",level = 0.95))
pred_confidence_f1 <- bind_cols(df_edu,as_tibble(predict(reg_f1, df_edu, interval="confidence",level = 0.95)))
df_edu_f1 <- df_edu %>% filter(female==1)


predict(reg_m1, df_edu, se.fit=T)
as_tibble(predict(reg_m1, df_edu, interval="confidence",level = 0.95))
pred_confidence_m1 <- bind_cols(df_edu,as_tibble(predict(reg_m1, df_edu, interval="confidence",level = 0.95)))
df_edu_m1 <- df_edu %>% filter(female==0)


graph_1 <- ggplot(data = df_edu, aes(x = education, y = ln_hourly_earning)) +
  geom_point()+
  geom_smooth(data = df_edu_f1, method = 'lm', colour=2,
              se=F, size = 0.8, linetype = 1)+
  geom_line(data = pred_confidence_f1, aes(x = education, y = fit[,"lwr"]),
            size = 0.5,linetype = 2, colour=2) +
  geom_line(data = pred_confidence_f1, aes(x = education, y = fit[,"upr"]),
            size = 0.5, linetype = 2, colour=2) +
  geom_smooth(data = df_edu_m1, method = 'lm', colour=4,
              se=F, size = 0.8, linetype = 1)+
  geom_line(data = pred_confidence_m1, aes(x = education, y = fit[,"lwr"]),
            size = 0.5,linetype = 2, colour=4) +
  geom_line(data = pred_confidence_m1, aes(x = education, y = fit[,"upr"]),
            size = 0.5, linetype = 2, colour=4) +
  scale_x_continuous(expand = c(0.01,0.01), limits = c(1, 8),
                     breaks = seq(1, 8, by = 1)) +
  scale_y_continuous(expand = c(0.01,0.01), limits = c(2, 4.5),
                     breaks = seq(2, 4.5, by = 0.5)) +
  labs(x= 'Education level', y= 'ln(hourly earning)', 
       title = 'Gender gap varies with the level of education',
       subtitle = 'Education level: from 1= W/o high school to 8= Phd')+
  theme_bw()
graph_1
```
